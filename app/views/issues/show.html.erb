<%= render 'shared/navbar-logo' %>
<%= render 'shared/flashes' %>

<div class="container">
  <div id="start-page" class=""> <!-- hidden-container -->
    <% if @issue.user == current_user && @issue.solutions.count.zero? %>
      <%= render 'issues/start_page' %>
    <% elsif @issue.user != current_user && @issue.solutions.count.zero? %>
      <%= render 'issues/start_page_participant' %>
    <% end %>
  </div>

  <h1 class="text-white"><%= @issue.title %></h1>

  <% if @issue.user == current_user %>
    <%= render 'participants_list' %>
  <% end %>

  <% if !@issue.support.file.nil? %>
    <div class="row">
      <div class="col-xs-12 offset-md-2 col-md-8 white-container mt-5">
        <h3 class= "text-center">Issue support</h3>
          <%= link_to cl_image_path(@issue.support), target: "_blank" do %>
          <%= cl_image_tag @issue.support, format: :jpg, height: 300, width: 400, crop: :scale, class: "support" %>
        <% end %>
      </div>
    </div>
  <% end %>

  <div class="row hidden-container">
    <div data-aos="zoom-in" class="col-xs-12 offset-md-2 col-md-8 white-container mt-5">
      <h3>Creative asset list</h3>
      <div id="chat-container" class="container-overflow">
        <% @issue.solutions.each do |solution| %>
          <%= render "solutions/solution", solution: solution, user_is_solutions_author: solution.user == current_user %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-xs-12 offset-md-2 col-md-8 white-container mt-5 mb-5">
      <%= simple_form_for [@issue, @solution], remote: true, html: {autocomplete: "off" } do |f| %>
        <%= f.label :My_solution, class: "label-style" %>
        <%= f.input_field :content, class: "form-control" %>
        <%= f.button :submit, 'Send my solution', class: "form-control button-style" %>
      <% end %>
    </div>
  </div>
</div>

<% content_for :after_js do %>
  <script>

  // Gestion d'affichage de la start page pour le leader
  const start_meeting_btn = document.getElementById("start-meeting-btn");
  // Tester si le bouton "start-meeting-btn" est affiché
  if (start_meeting_btn != null) {
    start_meeting_btn.addEventListener("click", (event) => {
      // LEADER : Cacher la banière de départ
      start_meeting_btn.parentElement.parentElement.parentElement.classList.add("hidden-container");
    });
  };

    let count_user = 0

    App.cable.subscriptions.create(
      {
        channel: 'IssuesChannel',
        issue_id: <%= @issue.id %>
      },
      {
        connected: () => {

          // var testSolutionContent = document.querySelector(".solution-content")
          // if (testSolutionContent != null ) {
          //   var solutions = document.querySelector(".hidden-container")
          //   solutions.classList.remove("hidden-container")
          // };
          // scrollLastMessageIntoView();
        },
        received: (data) => {

          const owner_issue_id = <%= @issue.user.id %>;
          const current_user_id = <%= current_user.id %>;
          const current_broadcaster_id = data.current_user_id;


          console.log(current_broadcaster_id);
          // console.log(data.user_partial)
          const partial_solution = data.solution_partial;
          var solutions = document.getElementById("chat-container");

          // Gestion d'affichage de la start page pour les participants
          const current_partial_users = document.getElementById('participants_list');

          if (data.user_partial != null && current_partial_users != null){
            // Afficher une icone si c'est le 1er utilisateur
            if (current_partial_users.firstElementChild.childElementCount == 0) {
              count_user += 1;
              console.log(count_user);
              current_partial_users.lastElementChild.insertAdjacentHTML('beforeend', data.user_partial);

            } else {
              // Vérifier si il y a déjà une icone pour cet utilisateur
                const current_user_partial = current_partial_users.firstElementChild.querySelector('#user' + current_broadcaster_id);
                // si ce n'est pas le cas -> on en ajoute
                if (current_user_partial == null) {
                    count_user += 1;
                    console.log(count_user);
                    current_partial_users.lastElementChild.insertAdjacentHTML('beforeend', data.user_partial);
                };
            };

          };
          // Gestion d'affichage de la start page pour les participants
          const waiting_banner = document.getElementById("waiting-p-participant");
          // Tester si la div "waiting-p-part" est affiché et si le meeting a commencé
          if (waiting_banner != null && data.message == 'starting_meeting') {
              // Participant : Cacher la banière de départ
              waiting_banner.classList.add("hidden-container");
          };

          if (solutions.children.length != 0 || data.solution_partial != null){
            solutions.parentElement.parentElement.classList.remove("hidden-container")
            // Pour afficher sa propre réponse d'une couleur différente
              var class_message = 'message'
              if (current_user_id == current_broadcaster_id) {
                class_message = 'message right'
              };
            if (data.solution_partial != null){
              var solutionsContainer = document.querySelector('.container-overflow');
              solutionsContainer.insertAdjacentHTML('beforeend', data.solution_partial.replace('message',class_message));
            };
          };

          var input = document.querySelector('#solution_content');
          input.value = '';
          input.blur();
          scrollLastMessageIntoView();
        }
      }
    )
  </script>
<% end %>
