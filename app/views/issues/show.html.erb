<%= render 'shared/navbar-logo' %>
<%= render 'shared/flashes' %>

<% if @issue.owned_by?(current_user) %>
  <div id="participants-list">
    <ul>

    </ul>
  </div>
<% end %>

<% if !@issue.support.file.nil? %>
  <div class="row">
    <div class="col-xs-12 offset-md-2 col-md-8 white-container mt-5">
      <h3 class= "text-center">Issue support</h3>
        <%= link_to cl_image_path(@issue.support), target: "_blank" do %>
        <%= cl_image_tag @issue.support, format: :jpg, height: 300, width: 400, crop: :scale, class: "support" %>
      <% end %>
    </div>
  </div>
<% end %>

<div class="container">
  <div id="current_step">
    <div id="start-page" class="">
      <% if @issue.owned_by?(current_user) %>
        <%= render 'issues/start_page' %>
      <% else %>
        <%= render 'issues/start_page_participant' %>
      <% end %>
    </div>
  </div>
</div>

<% content_for :after_js do %>

  <script>
    const participantsList = document.getElementById('participants-list');
    const currentStep = document.getElementById('current_step');

    App.cable.subscriptions.create(
      {
        <% if @issue.user == current_user %>
          channel: 'IssuesLeaderChannel',
        <% else %>
          channel: 'IssuesChannel',
        <% end %>
        issue_id: <%= @issue.id %>
      },
      {
        connected: () => {

          // var testSolutionContent = document.querySelector(".solution-content")
          // if (testSolutionContent != null ) {
          //   var solutions = document.querySelector(".hidden-container")
          //   solutions.classList.remove("hidden-container")
          // };
          // scrollLastMessageIntoView();

        },
        received: (data) => {


          switch (data.action) {
            case 'subscribed':
              console.log("User " + data.current_user_id + " subscribed");
              if (checkUserConnection(data.current_user_id) == true){
                participantsList.firstElementChild.insertAdjacentHTML("beforeend", data.user_partial)
              };
              break;
            case 'new_solution':
              currentStep.innerHTML = data.new_solution_partial;
              console.log(data);
              break;
            case 'new_votes':
              currentStep.innerHTML = data.new_votes_partial;
              console.log(data);
            default:
              console.log('No action ' + data.action + '.');
          }

          function checkUserConnection(user_id) {
            const current_user_partial = participantsList.firstElementChild.querySelector('#user' + user_id);
              return current_user_partial == null;
          }



          // //       // si ce n'est pas le cas -> on en ajoute
          //       if (current_user_partial == null) {
          //           count_users += 1;
          //           current_partial_users.lastElementChild.insertAdjacentHTML('beforeend', data.user_partial);
          //       };
          // const current_user_id = <%= current_user.id %>;
          // const current_broadcaster_id = data.current_user_id;
          // const partial_solution = data.solution_partial;
          // const current_partial_users = document.getElementById('participants_list');
          // var solutions = document.getElementById("chat-container");

          // // Gestion d'affichage de la start page pour les participants
          // if (data.user_partial != null && current_partial_users != null){
          //   // Afficher une icone si c'est le 1er utilisateur
          //   if (current_partial_users.firstElementChild.childElementCount == 0) {
          //     count_users += 1;
          //     current_partial_users.lastElementChild.insertAdjacentHTML('beforeend', data.user_partial);

          //   } else {
          //     // Vérifier si il y a déjà une icone pour cet utilisateur
          //   };
          // };
          // // Gestion d'affichage de la start page pour les participants
          // const waiting_banner = document.getElementById("waiting-p-participant");
          // // Tester si la div "waiting-p-part" est affiché et si le meeting a commencé
          // if (waiting_banner != null && data.message == 'starting_meeting') {
          //     // Participant : Cacher la banière de départ
          //     waiting_banner.classList.add("hidden-container");
          //     user.solution_round = 1;
          // };

          // if (solutions.children.length != 0 || data.solution_partial != null){
          //   solutions.parentElement.parentElement.classList.remove("hidden-container")
          //   // Pour afficher sa propre réponse d'une couleur différente
          //     var class_message = 'message'
          //     if (current_user_id == current_broadcaster_id) {
          //       class_message = 'message right'
          //     };
          //   if (data.solution_partial != null){
          //     var solutionsContainer = document.querySelector('.container-overflow');
          //     solutionsContainer.insertAdjacentHTML('beforeend', data.solution_partial.replace('message',class_message));
          //   };
          // };
          // if (data.vote_partial != null){
          //   let solution = document.getElementById(data.solution)
          //   count_votes += 1
          //   if (count_votes == count_users) {
          //     solution.innerHTML = data.vote_partial;
          //   };
          // };

          // var input = document.querySelector('#solution_content');
          // input.value = '';
          // input.blur();
          // scrollLastMessageIntoView();

          // console.log(user);
        }
      }
    )
  </script>
<% end %>
